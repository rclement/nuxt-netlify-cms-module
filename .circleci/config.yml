orbs:
  npm:
    description: |
      Configure and use the npm command-line interface (npm)

    executors:
      default:
        description: |
          The Debian-based Docker container to use when
          configuring/using the npm cli

        parameters:
          node-version:
            description: "The desired node version of the Docker container executor"
            type: string
            default: '10.13.0'

          debian-release:
            description: "The desired debian release of the Docker container executor"
            type: string
            default: 'stretch'

        docker:
          - image: circleci/node:<< parameters.node-version >>-<< parameters.debian-release >>-browsers

    commands:
      authenticate:
        parameters:
          token:
            type: string
        steps:
          - run:
              name: Authenticating with npm registry
              command: echo "//registry.npmjs.org/:_authToken=<< parameters.token >>" > ~/.npmrc

      publish:
        steps:
          - run:
              name: Publishing package to npm registry
              command: npm publish

    jobs:
      publish:
        executor: default

        parameters:
          workspace-path:
            description: "The key of a workflow workspace which contains the package to publish."
            type: string
            default: ''

          token:
            description: "Enter either your token or use the CircleCI UI to add your token under the 'NPM_TOKEN' env var"
            type: string
            default: '${NPM_TOKEN}'

        steps:
          - when:
              condition: <<parameters.workspace-path>>
              steps:
                - attach_workspace:
                    at: <<parameters.workspace-path>>
          - authenticate:
            token: << parameters.token >>
          - publish

version: 2.1

defaults: &defaults
  working_directory: /usr/src/app
  docker:
    - image: node:10

jobs:
  build-job:
    <<: *defaults
    steps:
      # Checkout repository
      - checkout

      # Restore cache
      - restore_cache:
          key: yarn-{{ checksum "yarn.lock" }}

      # Disable yarn progress bar for perf
      - run:
          name: Disabling yarn progress bar (performance)
          command: yarn config set no-progress

      # Disable yarn engine compatibility errors
      - run:
          name: Disabling yarn engine compatibility errors
          command: yarn config set ignore-engines true

      # Greenkeeper-lockfile
      - run:
          name: Installing greenkeeper-lockfile
          command: yarn global add greenkeeper-lockfile@1

      # Sonar-scanner
      - run:
          name: Installing sonar-scanner
          command: yarn global add sonarqube-scanner

      # Install dependencies
      - run:
          name: Installing dependencies
          command: yarn

      # Keep cache
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - "node_modules"
            - "/root/.sonar"

      # Update yarn.lock
      - run:
          name: Updating lockfile
          command: greenkeeper-lockfile-update

      # Test
      - run:
          name: Testing
          command: yarn test

      # Coverage
      - run:
          name: Analyzing code & uploading test coverage
          command: sonar-scanner -Dsonar.login=$SONAR_TOKEN -Dsonar.branch.name=$CIRCLE_BRANCH

      # Upload yarn.lock
      - run:
          name: Uploading lockfile
          command: greenkeeper-lockfile-upload

      - persist_to_workspace:
          root: /usr/src/app
          paths:
            - dist/*
            - .circleci/*

workflows:
  version: 2
  build:
    jobs:
      - build-job
      - npm/publish:
          requires:
            - build-job
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          workspace-path: /usr/src/app
