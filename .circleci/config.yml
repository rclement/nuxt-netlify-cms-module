version: 2

defaults: &defaults
  working_directory: /usr/src/app
  docker:
    - image: node:10

jobs:
  build-job:
    <<: *defaults
    steps:
      # Checkout repository
      - checkout

      # Restore cache
      - restore_cache:
          key: yarn-{{ checksum "yarn.lock" }}

      # Disable yarn progress bar for perf
      - run:
          name: Disabling yarn progress bar (performance)
          command: yarn config set no-progress

      # Disable yarn engine compatibility errors
      - run:
          name: Disabling yarn engine compatibility errors
          command: yarn config set ignore-engines true

      # Greenkeeper-lockfile
      - run:
          name: Installing greenkeeper-lockfile
          command: yarn global add greenkeeper-lockfile@1

      # Sonar-scanner
      - run:
          name: Installing sonar-scanner
          command: yarn global add sonarqube-scanner

      # Install dependencies
      - run:
          name: Installing dependencies
          command: yarn

      # Keep cache
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - "node_modules"
            - "/root/.sonar"

      # Update yarn.lock
      - run:
          name: Updating lockfile
          command: greenkeeper-lockfile-update

      # Test
      - run:
          name: Testing
          command: yarn test

      # Coverage
      - run:
          name: Analyzing code & uploading test coverage
          command: sonar-scanner -Dsonar.login=$SONAR_TOKEN -Dsonar.branch.name=$CIRCLE_BRANCH

      # Upload yarn.lock
      - run:
          name: Uploading lockfile
          command: greenkeeper-lockfile-upload

      - persist_to_workspace:
          root: /usr/src/app
          paths:
            - dist/*
            - .circleci/*

  deploy-job:
    <<: *defaults
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /usr/src/app

      - run:
          name: Authenticating with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc

      - run:
          name: Publishing package
          command: npm publish

workflows:
  version: 2
  build:
    jobs:
      - build-job
      - deploy-job:
          requires:
            - build-job
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
